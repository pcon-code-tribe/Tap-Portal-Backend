// Table for Admin
CREATE TABLE ADMIN
(
    Email VARCHAR(255) PRIMARY KEY,
    Name VARCHAR(255) ,
    Password VARCHAR(255),
    Branch VARCHAR(255),
    jwt BINARY(50) 
);

//TABLE FOR STUDENT
CREATE TABLE STUDENT
( 
  RegNo VARCHAR(255) PRIMARY KEY,
  Name VARCHAR(255),
  Branch VARCHAR(255),
  Email VARCHAR(255),
  CV VARCHAR(255),
  Cgpa FLOAT(5,3),
  10th FLOAT(4,2),
  12th FLOAT(4,2)
);

//TABLE FOR USER LOG
CREATE TABLE USER_LOGGER
(
  Id Int Auto Increment PRIMARY KEY,
  Email VARCHAR(255),
  logs TEXT,
  TimeStamp DATETIME,
  IP VARCHAR(255),
  FOREIGN KEY(Email) REFERENCES STUDENT(Email) ON DELETE CASCADE
);

//TABLE FOR ALL_STUDENT
CREATE TABLE ALL_STUDENT(
  Email VARCHAR(255) PRIMARY KEY,
  Password VARCHAR(255),
  jwt VARCHAR(255)
);

//TABLE FOR ADMIN LOG
CREATE TABLE ADMIN_LOGGER
(
  Id Int auto increment PRIMARY KEY,
  Email VARCHAR(255),
  logs TEXT,
  TimeStamp DATETIME,
  IP VARCHAR(255),
  FOREIGN KEY(Email) REFERENCES ADMIN(Email) ON DELETE CASCADE
);

//TABLE FOR COMPANY
CREATE TABLE COMPANY
(
    Id VARCHAR(255) PRIMARY KEY,
    Date_Of_Visit DATE,
    Name VARCHAR(255),
    Last_Date_Of_Apply DATE,
    Package INT,
    Cgpa FLOAT(5,3),
    Description VARCHAR(500),
    PDF VARCHAR(1000)
);

//TABLE FOR ELIGIBLE BRANCHES
CREATE TABLE ELIGIBLE_BRANCHES
(
  Id INT Auto Increment PRIMARY KEY,
  Company_Id varchar(255),
  Branch TEXT,
  FOREIGN KEY(Company_Id) REFERENCES COMPANY(Id) ON DELETE CASCADE
);

//TABLE FOR APPLICATION
CREATE TABLE APPLICATION
(
    COMPANY_ID VARCHAR(255),
    RegNo VARCHAR(21),
    Status TEXT,
    FOREIGN KEY(COMPANY_ID) REFERENCES COMPANY(Id) ON DELETE CASCADE,
    FOREIGN KEY(RegNo) REFERENCES STUDENT(RegNo) ON DELETE CASCADE,
    PRIMARY KEY(COMPANY_ID, RegNo)
);

//TABLE FOR SELECTED
CREATE TABLE SELECTED
(
  Id INT Auto Increment PRIMARY KEY,
  Company_Id varchar(255),
  RegNo varchar(255),
  Status TEXT,
  FOREIGN KEY(Company_Id) REFERENCES COMPANY(Id) ON DELETE CASCADE,
  FOREIGN KEY(RegNo) REFERENCES STUDENT(RegNo) ON DELETE CASCADE
);
